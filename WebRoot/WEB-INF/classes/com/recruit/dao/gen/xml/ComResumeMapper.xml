<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.dao.gen.mapper.ComResumeMapper" >
  <resultMap id="BaseResultMap" type="com.recruit.dao.gen.model.ComResume" >
    <id column="resume_id" property="resumeId" jdbcType="INTEGER" />
    <result column="com_id" property="comId" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
    <result column="resume_name" property="resumeName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="look" property="look" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    resume_id, com_id, job_id, emp_id, resume_name, status, look
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recruit.dao.gen.model.ComResumeCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from com_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from com_resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from com_resume
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.recruit.dao.gen.model.ComResumeCriteria" >
    delete from com_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.recruit.dao.gen.model.ComResume" useGeneratedKeys="true" keyProperty="resumeId" >
    insert into com_resume (com_id, job_id, emp_id, 
      resume_name, status, look
      )
    values (#{comId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, 
      #{resumeName,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{look,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.dao.gen.model.ComResume" useGeneratedKeys="true" keyProperty="resumeId" >
    insert into com_resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        com_id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="resumeName != null" >
        resume_name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="look != null" >
        look,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="resumeName != null" >
        #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="look != null" >
        #{look,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.recruit.dao.gen.model.ComResumeCriteria" resultType="java.lang.Integer" >
    select count(*) from com_resume
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update com_resume
    <set >
      <if test="record.resumeId != null" >
        resume_id = #{record.resumeId,jdbcType=INTEGER},
      </if>
      <if test="record.comId != null" >
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
      <if test="record.resumeName != null" >
        resume_name = #{record.resumeName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.look != null" >
        look = #{record.look,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update com_resume
    set resume_id = #{record.resumeId,jdbcType=INTEGER},
      com_id = #{record.comId,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER},
      resume_name = #{record.resumeName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      look = #{record.look,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.dao.gen.model.ComResume" >
    update com_resume
    <set >
      <if test="comId != null" >
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="resumeName != null" >
        resume_name = #{resumeName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="look != null" >
        look = #{look,jdbcType=INTEGER},
      </if>
    </set>
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.dao.gen.model.ComResume" >
    update com_resume
    set com_id = #{comId,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      resume_name = #{resumeName,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      look = #{look,jdbcType=INTEGER}
    where resume_id = #{resumeId,jdbcType=INTEGER}
  </update>
</mapper>