<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.dao.gen.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="com.recruit.dao.gen.model.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="com_id" property="comId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_PersonCount" property="jobPersoncount" jdbcType="INTEGER" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="language" property="language" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="VARCHAR" />
    <result column="end_date" property="endDate" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_id, com_id, job_name, job_PersonCount, degree, language, grade, address, salary, 
    job_status, start_date, end_date, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.recruit.dao.gen.model.JobCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  
    <delete id="deleteRviewByPrimaryKey" parameterType="java.lang.Integer" >
    delete from com_resume
    where resume_id = #{resume_id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByExample" parameterType="com.recruit.dao.gen.model.JobCriteria" >
    delete from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.recruit.dao.gen.model.Job" useGeneratedKeys="true" keyProperty="jobId" >
    insert into job (com_id, job_name, job_PersonCount, 
      degree, language, grade, 
      address, salary, job_status, 
      start_date, end_date, description
      )
    values (#{comId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobPersoncount,jdbcType=INTEGER}, 
      #{degree,jdbcType=VARCHAR}, #{language,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{salary,jdbcType=VARCHAR}, #{jobStatus,jdbcType=VARCHAR}, 
      #{startDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.dao.gen.model.Job" useGeneratedKeys="true" keyProperty="jobId" >
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        com_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobPersoncount != null" >
        job_PersonCount,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="language != null" >
        language,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="jobStatus != null" >
        job_status,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="comId != null" >
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobPersoncount != null" >
        #{jobPersoncount,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.recruit.dao.gen.model.JobCriteria" resultType="java.lang.Integer" >
    select count(*) from job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job
    <set >
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.comId != null" >
        com_id = #{record.comId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobPersoncount != null" >
        job_PersonCount = #{record.jobPersoncount,jdbcType=INTEGER},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.language != null" >
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.jobStatus != null" >
        job_status = #{record.jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      com_id = #{record.comId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_PersonCount = #{record.jobPersoncount,jdbcType=INTEGER},
      degree = #{record.degree,jdbcType=VARCHAR},
      language = #{record.language,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=VARCHAR},
      job_status = #{record.jobStatus,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.dao.gen.model.Job" >
    update job
    <set >
      <if test="comId != null" >
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobPersoncount != null" >
        job_PersonCount = #{jobPersoncount,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="language != null" >
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.dao.gen.model.Job" >
    update job
    set com_id = #{comId,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_PersonCount = #{jobPersoncount,jdbcType=INTEGER},
      degree = #{degree,jdbcType=VARCHAR},
      language = #{language,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=VARCHAR},
      job_status = #{jobStatus,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>